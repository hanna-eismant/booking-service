<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http pattern="/favicon.ico" security="none"/>
    <http pattern="/api/soap/*" security="none"/>

    <http auto-config="true" use-expressions="true">

        <access-denied-handler error-page="/403"/>

        <intercept-url pattern="/events/upload" access="hasRole('ROLE_BOOKING_MANAGER')"/>
        <intercept-url pattern="/users/upload" access="hasRole('ROLE_BOOKING_MANAGER')"/>
        <intercept-url pattern="/tickets/**/event_tickets.pdf" access="hasRole('ROLE_BOOKING_MANAGER')"/>
        <intercept-url pattern="/administration**/**" access="hasRole('ROLE_BOOKING_MANAGER')"/>

        <intercept-url pattern="/users/my-account" access="hasRole('ROLE_REGISTERED_USER')"/>

        <intercept-url pattern="/users**/**" access="hasRole('ROLE_BOOKING_MANAGER')"/>

        <intercept-url pattern="/events**/**" access="hasRole('ROLE_REGISTERED_USER')"/>

        <intercept-url pattern="/**" access="permitAll"/>

        <form-login login-page="/login"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/"
                    authentication-failure-url="/error"/>

        <logout invalidate-session="true"
                delete-cookies="JSESSIONID"
                logout-url="/logout"
                logout-success-url="/home"/>

        <csrf disabled="true"/>

        <remember-me data-source-ref="fileDataSource" remember-me-parameter="remember"/>

    </http>

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean class="com.epam.spring.core.authentication.CustomUserDetailsService"
                id="customUserDetailsService"/>

    <beans:bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
                id="daoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customUserDetailsService"/>
        <beans:property name="passwordEncoder" ref="bcryptEncoder"/>
    </beans:bean>

    <beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource"
                id="saltSource">
        <beans:property name="userPropertyToUse" value="email"/>
    </beans:bean>

    <beans:bean class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <beans:constructor-arg value="bs-anon-key"/>
    </beans:bean>

    <beans:bean class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <beans:constructor-arg value="bs-anon-key"/>
    </beans:bean>

</beans:beans>
